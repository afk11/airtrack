// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.6.1
// source: message.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Url  string `protobuf:"bytes,3,opt,name=Url,proto3" json:"Url,omitempty"`
}

func (x *Source) Reset() {
	*x = Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *Source) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Source) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Source) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source *Source `protobuf:"bytes,1,opt,name=Source,proto3" json:"Source,omitempty"`
	// 6 character hex identifier for aircraft
	Icao                       string `protobuf:"bytes,10,opt,name=Icao,proto3" json:"Icao,omitempty"`
	Squawk                     string `protobuf:"bytes,11,opt,name=Squawk,proto3" json:"Squawk,omitempty"`
	CallSign                   string `protobuf:"bytes,12,opt,name=CallSign,proto3" json:"CallSign,omitempty"`
	AltitudeGeometric          string `protobuf:"bytes,13,opt,name=AltitudeGeometric,proto3" json:"AltitudeGeometric,omitempty"`
	AltitudeBarometric         string `protobuf:"bytes,14,opt,name=AltitudeBarometric,proto3" json:"AltitudeBarometric,omitempty"`
	Latitude                   string `protobuf:"bytes,20,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude                  string `protobuf:"bytes,21,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
	IsOnGround                 bool   `protobuf:"varint,30,opt,name=IsOnGround,proto3" json:"IsOnGround,omitempty"`
	VerticalRateGeometric      int64  `protobuf:"varint,40,opt,name=VerticalRateGeometric,proto3" json:"VerticalRateGeometric,omitempty"`
	HaveVerticalRateGeometric  bool   `protobuf:"varint,41,opt,name=HaveVerticalRateGeometric,proto3" json:"HaveVerticalRateGeometric,omitempty"`
	VerticalRateBarometric     int64  `protobuf:"varint,45,opt,name=VerticalRateBarometric,proto3" json:"VerticalRateBarometric,omitempty"`
	HaveVerticalRateBarometric bool   `protobuf:"varint,46,opt,name=HaveVerticalRateBarometric,proto3" json:"HaveVerticalRateBarometric,omitempty"`
	Track                      string `protobuf:"bytes,50,opt,name=Track,proto3" json:"Track,omitempty"`
	GroundSpeed                string `protobuf:"bytes,90,opt,name=GroundSpeed,proto3" json:"GroundSpeed,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Message) GetIcao() string {
	if x != nil {
		return x.Icao
	}
	return ""
}

func (x *Message) GetSquawk() string {
	if x != nil {
		return x.Squawk
	}
	return ""
}

func (x *Message) GetCallSign() string {
	if x != nil {
		return x.CallSign
	}
	return ""
}

func (x *Message) GetAltitudeGeometric() string {
	if x != nil {
		return x.AltitudeGeometric
	}
	return ""
}

func (x *Message) GetAltitudeBarometric() string {
	if x != nil {
		return x.AltitudeBarometric
	}
	return ""
}

func (x *Message) GetLatitude() string {
	if x != nil {
		return x.Latitude
	}
	return ""
}

func (x *Message) GetLongitude() string {
	if x != nil {
		return x.Longitude
	}
	return ""
}

func (x *Message) GetIsOnGround() bool {
	if x != nil {
		return x.IsOnGround
	}
	return false
}

func (x *Message) GetVerticalRateGeometric() int64 {
	if x != nil {
		return x.VerticalRateGeometric
	}
	return 0
}

func (x *Message) GetHaveVerticalRateGeometric() bool {
	if x != nil {
		return x.HaveVerticalRateGeometric
	}
	return false
}

func (x *Message) GetVerticalRateBarometric() int64 {
	if x != nil {
		return x.VerticalRateBarometric
	}
	return 0
}

func (x *Message) GetHaveVerticalRateBarometric() bool {
	if x != nil {
		return x.HaveVerticalRateBarometric
	}
	return false
}

func (x *Message) GetTrack() string {
	if x != nil {
		return x.Track
	}
	return ""
}

func (x *Message) GetGroundSpeed() string {
	if x != nil {
		return x.GroundSpeed
	}
	return ""
}

type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 6 character hex identifier for aircraft
	Icao string `protobuf:"bytes,1,opt,name=Icao,proto3" json:"Icao,omitempty"`
	// barometric altitude in feet
	HaveAltitudeBarometric bool  `protobuf:"varint,10,opt,name=HaveAltitudeBarometric,proto3" json:"HaveAltitudeBarometric,omitempty"`
	AltitudeBarometric     int64 `protobuf:"varint,11,opt,name=AltitudeBarometric,proto3" json:"AltitudeBarometric,omitempty"`
	// geometric altitude in feet
	HaveAltitudeGeometric bool  `protobuf:"varint,12,opt,name=HaveAltitudeGeometric,proto3" json:"HaveAltitudeGeometric,omitempty"`
	AltitudeGeometric     int64 `protobuf:"varint,13,opt,name=AltitudeGeometric,proto3" json:"AltitudeGeometric,omitempty"`
	HaveLocation          bool  `protobuf:"varint,20,opt,name=HaveLocation,proto3" json:"HaveLocation,omitempty"`
	// Latitude
	Latitude float64 `protobuf:"fixed64,21,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	// Longitude
	Longitude    float64 `protobuf:"fixed64,22,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
	HaveCallsign bool    `protobuf:"varint,30,opt,name=HaveCallsign,proto3" json:"HaveCallsign,omitempty"`
	// Callsign or flight identifier
	CallSign   string `protobuf:"bytes,31,opt,name=CallSign,proto3" json:"CallSign,omitempty"`
	HaveSquawk bool   `protobuf:"varint,40,opt,name=HaveSquawk,proto3" json:"HaveSquawk,omitempty"`
	// 4 digit octal number (as string)
	Squawk      string `protobuf:"bytes,41,opt,name=Squawk,proto3" json:"Squawk,omitempty"`
	HaveCountry bool   `protobuf:"varint,50,opt,name=HaveCountry,proto3" json:"HaveCountry,omitempty"`
	// Aircraft registration country determined by ICAO Country Allocation
	// CountryCode is ISO3166 2 letter code
	CountryCode string `protobuf:"bytes,51,opt,name=CountryCode,proto3" json:"CountryCode,omitempty"`
	// Country is the long country name
	Country string `protobuf:"bytes,52,opt,name=Country,proto3" json:"Country,omitempty"`
	// IsOnGround tracks whether the aircraft is on ground or in the air.
	IsOnGround bool `protobuf:"varint,60,opt,name=IsOnGround,proto3" json:"IsOnGround,omitempty"`
	// barometric change in vertical rate (+/-) in feet per minute
	HaveVerticalRateBarometric bool  `protobuf:"varint,70,opt,name=HaveVerticalRateBarometric,proto3" json:"HaveVerticalRateBarometric,omitempty"`
	VerticalRateBarometric     int64 `protobuf:"varint,71,opt,name=VerticalRateBarometric,proto3" json:"VerticalRateBarometric,omitempty"`
	// geometric change in vertical rate (+/-) in feet per minute
	HaveVerticalRateGeometric bool    `protobuf:"varint,75,opt,name=HaveVerticalRateGeometric,proto3" json:"HaveVerticalRateGeometric,omitempty"`
	VerticalRateGeometric     int64   `protobuf:"varint,76,opt,name=VerticalRateGeometric,proto3" json:"VerticalRateGeometric,omitempty"`
	HaveTrack                 bool    `protobuf:"varint,80,opt,name=HaveTrack,proto3" json:"HaveTrack,omitempty"`
	Track                     float64 `protobuf:"fixed64,81,opt,name=Track,proto3" json:"Track,omitempty"`
	HaveGroundSpeed           bool    `protobuf:"varint,90,opt,name=HaveGroundSpeed,proto3" json:"HaveGroundSpeed,omitempty"`
	GroundSpeed               float64 `protobuf:"fixed64,91,opt,name=GroundSpeed,proto3" json:"GroundSpeed,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *State) GetIcao() string {
	if x != nil {
		return x.Icao
	}
	return ""
}

func (x *State) GetHaveAltitudeBarometric() bool {
	if x != nil {
		return x.HaveAltitudeBarometric
	}
	return false
}

func (x *State) GetAltitudeBarometric() int64 {
	if x != nil {
		return x.AltitudeBarometric
	}
	return 0
}

func (x *State) GetHaveAltitudeGeometric() bool {
	if x != nil {
		return x.HaveAltitudeGeometric
	}
	return false
}

func (x *State) GetAltitudeGeometric() int64 {
	if x != nil {
		return x.AltitudeGeometric
	}
	return 0
}

func (x *State) GetHaveLocation() bool {
	if x != nil {
		return x.HaveLocation
	}
	return false
}

func (x *State) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *State) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *State) GetHaveCallsign() bool {
	if x != nil {
		return x.HaveCallsign
	}
	return false
}

func (x *State) GetCallSign() string {
	if x != nil {
		return x.CallSign
	}
	return ""
}

func (x *State) GetHaveSquawk() bool {
	if x != nil {
		return x.HaveSquawk
	}
	return false
}

func (x *State) GetSquawk() string {
	if x != nil {
		return x.Squawk
	}
	return ""
}

func (x *State) GetHaveCountry() bool {
	if x != nil {
		return x.HaveCountry
	}
	return false
}

func (x *State) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *State) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *State) GetIsOnGround() bool {
	if x != nil {
		return x.IsOnGround
	}
	return false
}

func (x *State) GetHaveVerticalRateBarometric() bool {
	if x != nil {
		return x.HaveVerticalRateBarometric
	}
	return false
}

func (x *State) GetVerticalRateBarometric() int64 {
	if x != nil {
		return x.VerticalRateBarometric
	}
	return 0
}

func (x *State) GetHaveVerticalRateGeometric() bool {
	if x != nil {
		return x.HaveVerticalRateGeometric
	}
	return false
}

func (x *State) GetVerticalRateGeometric() int64 {
	if x != nil {
		return x.VerticalRateGeometric
	}
	return 0
}

func (x *State) GetHaveTrack() bool {
	if x != nil {
		return x.HaveTrack
	}
	return false
}

func (x *State) GetTrack() float64 {
	if x != nil {
		return x.Track
	}
	return 0
}

func (x *State) GetHaveGroundSpeed() bool {
	if x != nil {
		return x.HaveGroundSpeed
	}
	return false
}

func (x *State) GetGroundSpeed() float64 {
	if x != nil {
		return x.GroundSpeed
	}
	return 0
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x61, 0x69, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x22, 0x3e, 0x0a, 0x06, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x22, 0xd7, 0x04, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x69, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x49, 0x63, 0x61, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49,
	0x63, 0x61, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x71, 0x75, 0x61, 0x77, 0x6b, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x71, 0x75, 0x61, 0x77, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x61, 0x6c, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x61, 0x6c, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x41, 0x6c, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x47, 0x65, 0x6f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x2e, 0x0a, 0x12, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x42, 0x61, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x61, 0x72, 0x6f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12,
	0x34, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x47,
	0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x28, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15,
	0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x3c, 0x0a, 0x19, 0x48, 0x61, 0x76, 0x65, 0x56, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x18, 0x29, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x48, 0x61, 0x76, 0x65, 0x56, 0x65,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x12, 0x36, 0x0a, 0x16, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x2d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x16, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x3e, 0x0a, 0x1a, 0x48,
	0x61, 0x76, 0x65, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1a, 0x48, 0x61, 0x76, 0x65, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x22, 0xa7, 0x07, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x63, 0x61, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63, 0x61,
	0x6f, 0x12, 0x36, 0x0a, 0x16, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x42, 0x61, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x16, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42,
	0x61, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x2e, 0x0a, 0x12, 0x41, 0x6c, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x61, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42,
	0x61, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x34, 0x0a, 0x15, 0x48, 0x61, 0x76,
	0x65, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12,
	0x2c, 0x0a, 0x11, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x47, 0x65, 0x6f, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x41, 0x6c, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x22, 0x0a,
	0x0c, 0x48, 0x61, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x48, 0x61, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x48,
	0x61, 0x76, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x48, 0x61, 0x76, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x69, 0x67, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x48,
	0x61, 0x76, 0x65, 0x53, 0x71, 0x75, 0x61, 0x77, 0x6b, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x48, 0x61, 0x76, 0x65, 0x53, 0x71, 0x75, 0x61, 0x77, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x71, 0x75, 0x61, 0x77, 0x6b, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x71, 0x75,
	0x61, 0x77, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x48, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x48, 0x61, 0x76, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x48, 0x61, 0x76, 0x65, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x61, 0x74, 0x65, 0x42, 0x61, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x48, 0x61, 0x76, 0x65, 0x56, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x42, 0x61, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x12, 0x36, 0x0a, 0x16, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x47, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x16, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x3c, 0x0a, 0x19, 0x48, 0x61, 0x76,
	0x65, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6f,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x48, 0x61,
	0x76, 0x65, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x47, 0x65,
	0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x34, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x18, 0x4c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x1c, 0x0a,
	0x09, 0x48, 0x61, 0x76, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x50, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x48, 0x61, 0x76, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x18, 0x51, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x12, 0x28, 0x0a, 0x0f, 0x48, 0x61, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x48, 0x61, 0x76, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x47,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x42, 0x22, 0x5a,
	0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x66, 0x6b, 0x31,
	0x31, 0x2f, 0x61, 0x69, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_message_proto_goTypes = []interface{}{
	(*Source)(nil),  // 0: airtrack.Source
	(*Message)(nil), // 1: airtrack.Message
	(*State)(nil),   // 2: airtrack.State
}
var file_message_proto_depIdxs = []int32{
	0, // 0: airtrack.Message.Source:type_name -> airtrack.Source
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
