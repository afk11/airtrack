version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  build-sqlite3: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.15

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}

      - run:
          name: Install build tools
          command: sudo apt install autoconf libtool libprotobuf-dev libprotoc-dev libncurses-dev protobuf-compiler librrd-dev build-essential
      - run:
          name: Install go-bindata and easyjson and protobuf tools
          command: make install-protobuf-c install-protoc-gen-go install-go-bindata install-easyjson

      - run:
          name: Run unit tests
          # store the results of our tests in the $TEST_RESULTS directory
          command: TESTOPTIONS="-v " make test

      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
  build-postgres: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.15
      - image: nimbustech/postgres-ssl:9.5
        environment:
          POSTGRES_USER: airtrack_user
          POSTGRES_DB: airtrack_test_0

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}

      - run:
          name: Install build tools
          command: sudo apt install autoconf libtool libprotobuf-dev libprotoc-dev libncurses-dev protobuf-compiler librrd-dev build-essential
      - run:
          name: Install go-bindata and easyjson and protobuf tools
          command: make install-protobuf-c install-protoc-gen-go install-go-bindata install-easyjson

      - run:
          name: Run unit tests
          # store the results of our tests in the $TEST_RESULTS directory
          command: AIRTRACK_TEST_DB_DRIVER=postgres AIRTRACK_TEST_DB_PORT=5432 AIRTRACK_TEST_DB_USER=airtrack_user AIRTRACK_TEST_DB_PASS=airtrack_pass TESTOPTIONS="-v " make test

      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
  build-mysql: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.15
      - image: circleci/mariadb:10.5
        environment:
          MYSQL_USER: airtrack_user
          MYSQL_PASSWORD: airtrack_pass
          MYSQL_DATABASE: airtrack_test_0

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}

      - run:
          name: Install build tools
          command: sudo apt install autoconf libtool libprotobuf-dev libprotoc-dev libncurses-dev protobuf-compiler librrd-dev build-essential
      - run:
          name: Install go-bindata and easyjson and protobuf tools
          command: make install-protobuf-c install-protoc-gen-go install-go-bindata install-easyjson

      - run:
          name: Run unit tests
          # store the results of our tests in the $TEST_RESULTS directory
          command: AIRTRACK_TEST_DB_DRIVER=mysql AIRTRACK_TEST_DB_PORT=3306 AIRTRACK_TEST_DB_USER=airtrack_user AIRTRACK_TEST_DB_PASS=airtrack_pass TESTOPTIONS="-v " make test

      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
  publish-github-release:
    docker:
      - image: circleci/golang:1.15
    steps:
      - checkout # check out source code to working directory
      - run:
          name: Install build tools
          command: sudo apt install autoconf libtool libprotobuf-dev libprotoc-dev libncurses-dev protobuf-compiler librrd-dev build-essential
      - run:
          name: Install go-bindata and easyjson and protobuf tools
          command: make install-protobuf-c install-protoc-gen-go install-go-bindata install-easyjson
      - run:
          name: Run unit tests
          # store the results of our tests in the $TEST_RESULTS directory
          command: TESTOPTIONS="-v " make build-airtrack-linux-amd64
      - run:
          name: Copy build artifacts
          command: |
            mkdir ./artifacts/
            cp airtrack.* ./artifacts/
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION=$(my-binary --version)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/
workflows:
  version: 2
  test-and-build-workflow:
    jobs:
      - build-sqlite3:
          filters:
            tags:
              only: /.*/
      - build-postgres:
          filters:
            tags:
              only: /.*/
      - build-mysql:
          filters:
            tags:
              only: /.*/
      - publish-github-release:
          requires:
            - build-sqlite3
            - build-postgres
            - build-mysql
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/